# Configuration file

general {
    # Heights below this value will have normal, unmodified biome temperature
    I:biomeTemperatureCenterY=64

    # How much should biome temperature increase with height (negative values decrease temperature)
    D:biomeTemperatureHeightFactor=-0.0016666667070239782

    # Above this height, biome temperature will no longer change
    I:biomeTemperatureScaleMaxY=256

    # Chunk garbage collector update interval. Lower value will increase CPU usage, but can reduce memory usage.
    I:chunkGCInterval=100

    # Vanilla compatibility generator type, which will convert vanilla world type generators output in cubic
    S:compatibilityGeneratorType=cubicchunks:default
    I:defaultMaxCubesPerChunkloadingTicket=400

    # By default cubic chunks will attempt to go over all the blocks over time to fix lighting only on server. Enable this to also fix lighting on the clientside.
    B:doClientLightFixes=false

    # The specified dimension ID ranges won't be created as cubic chunks world for new worlds, and worlds created before this option has been added, unless forceDimensionExcludes is set to true. IDs can be specified either as range in format min:max, or as single numbers.
    # Example:
    #     S:excludedDimensions <
    #         1
    #         10:100
    #         101:200
    #         -5
    #      >
    # The ranges specified can overlap, and the bounds can be specified in reversed order.
    S:excludedDimensions <
        1
     >

    # If this is set to true, cubic chunks will respect excluded dimensions even for already existing worlds. If this results in a existing dimension switching between cubic chunks and vanilla, the contents of that dimension won't be converted.
    B:forceDimensionExcludes=false

    # Determines when a cubic chunks world should be created for non-cubic-chunks world types.
    # NONE - only when cubic chunks world type
    # NEW_WORLD - only for newly created worlds
    # LOAD_NOT_EXCLUDED - load all worlds as cubic chunks, except excluded dimensions
    # ALWAYS - load everything as cubic chunks. Overrides forceDimensionExcludes
    # Valid values:
    # NONE
    # NEW_WORLD
    # LOAD_NOT_EXCLUDED
    # ALWAYS
    S:forceLoadCubicChunks=NONE

    # The maximum number of cubic chunks to generate per tick.
    I:maxGeneratedCubesPerTick=1

    # Eliminates a few data copies in compatibility generator. May break some mods. Disable if you experience issues in modded dimensions or world types
    B:optimizedCompatibilityGenerator=true

    # In an attempt to fix lighting glitches over time, cubic chunks will keep updating light in specified amount of blocks per column (chunk) per tick. Default value of 1 doesn't cause noticeable performance drop, but still fixes most major issues relatively quickly.
    I:relightChecksPerTickPerColumn=0

    # Horizontal distance for initially generated spawn area
    I:spawnGenerateDistanceXZ=0

    # Vertical distance for initially generated spawn area
    I:spawnGenerateDistanceY=0

    # Horizontal distance for spawn chunks kept loaded in memory
    I:spawnLoadDistanceXZ=0

    # Vertical distance for spawn chunks kept loaded in memory
    I:spawnLoadDistanceY=0

    # Enabling this option will force cubic chunks to use world generators designed for two dimensional chunks, which are often used for custom ore generators added by mods. To do so cubic chunks will pregenerate cubes in a range of height from 0 to 255. This is very likely to break a lot of mods, cause the game to hang, and make the world generation depend on the order in which things are generated. Use at your own risk.
    B:useVanillaChunkWorldGenerators=false

    # Similar to Minecraft's view distance, only for vertical chunks. Automatically adjusted by vertical view distance slider on the client. Does not affect rendering, only what chunks are sent to client.
    I:verticalCubeLoadDistance=6

    modmaxcubesperchunkloadingticket {
        I:cubicchunks=400
    }

}


